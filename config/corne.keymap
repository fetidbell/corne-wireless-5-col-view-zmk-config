/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <400>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    flavor = "balanced";
};

&lt { tapping-term-ms = <400>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2 3>;
            bindings = <&kp ESCAPE>;
        };

        combo_bksp {
            timeout-ms = <50>;
            key-positions = <10 9 8>;
            bindings = <&kp BACKSPACE>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <13 14 15>;
        };

        combo_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <25 26 27>;
        };

        combo_delete {
            bindings = <&kp DELETE>;
            key-positions = <21 22 20>;
        };

        combo_rshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <33 34 32>;
        };

        exclm {
            bindings = <&kp EXCLAMATION>;
            key-positions = <1 13>;
        };

        at {
            bindings = <&kp AT_SIGN>;
            key-positions = <2 14>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <3 15>;
        };

        dllr {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
        };

        percnt {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <6 18>;
        };

        and {
            bindings = <&kp AMPERSAND>;
            key-positions = <7 19>;
        };

        str {
            bindings = <&kp ASTERISK>;
            key-positions = <8 20>;
        };

        leftparen {
            bindings = <&kp LPAR>;
            key-positions = <9 21>;
        };

        rparen {
            bindings = <&kp RPAR>;
            key-positions = <10 22>;
        };

        system_reset {
            bindings = <&sys_reset>;
            key-positions = <3 4 5 14>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <15 16 17 26>;
        };

        system_layer_combo {
            bindings = <&mo 3>;
            key-positions = <36 37 38>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            bindings = <
&trans  &kp Q  &kp W  &kp E          &kp R         &kp T          &kp Y        &kp U                     &kp I              &kp O    &kp P             &trans
&trans  &kp A  &kp S  &kp D          &kp F         &kp G          &kp H        &kp J                     &kp K              &kp L    &kp SINGLE_QUOTE  &trans
&trans  &kp Z  &kp X  &kp C          &kp V         &kp B          &kp N        &kp M                     &kp COMMA          &kp DOT  &kp FSLH          &trans
                      &mt LCTRL TAB  &kp LEFT_GUI  &lt 2 SPACE    &lt 1 ENTER  &mt LEFT_SHIFT BACKSPACE  &mt RIGHT_ALT ESC
            >;
        };

        num_nav {
            bindings = <
&trans  &kp N1        &kp N2  &kp N3  &kp N4  &kp N5          &trans    &trans    &trans  &none      &trans    &trans
&trans  &kp NUMBER_6  &kp N7  &kp N8  &kp N9  &kp NUMBER_0    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp SEMI  &trans
&trans  &trans        &trans  &trans  &trans  &trans          &trans    &trans    &trans  &trans     &trans    &trans
                              &trans  &trans  &trans          &trans    &trans    &trans
            >;
        };

        symbols {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN    &kp POUND     &kp DOLLAR  &kp PERCENT    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans         &trans            &trans  &trans
&trans  &kp CARET        &kp AMPERSAND  &kp ASTERISK  &kp TILDE   &kp GRAVE      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp LESS_THAN  &kp GREATER_THAN  &trans  &trans
&trans  &kp BACKSLASH    &kp PIPE       &kp SLASH     &kp MINUS   &kp EQUAL      &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans         &trans            &trans  &trans
                                        &trans        &trans      &trans         &trans                &trans                 &trans
            >;
        };

        sys_layer {
            bindings = <
&trans  &bt BT_CLR    &bt BT_CLR_ALL  &bt BT_PRV    &bt BT_NXT    &trans          &none   &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &none   &none   &none   &none   &trans
&trans  &bootloader   &sys_reset      &none         &none         &none           &none   &trans  &trans  &trans  &trans  &trans
                                      &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };
};
